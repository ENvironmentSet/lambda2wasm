(module
  (global $context_heap_offset (mut i32) (i32.const 0))
  (memory $context_heap 1)
  ;; context ref : vec128 ( value : 64bit, next: i32, start: i32)
  ;; context ref :  vec128 ( value : 64bit, before: i32, index: i32)
  (func $create_context (param $value i64) (param $start i32) (result v128)
      (i64x2.replace_lane 0 (v128.const i64x2 0 0) (local.get $value))
      (local.get $start)
      (i32x4.replace_lane 3)
  )
  (func $cal_heap_border (result i32)
    (i32.mul (global.get $context_heap_offset) (i32.const 128))
  )
  (func $start_context (param $value i64) (result i32)
    (call $cal_heap_border)
    (call $create_context (local.get $value) (call $cal_heap_border))
    (v128.store)
    (global.get $context_heap_offset)
    (global.set $context_heap_offset (i32.add (i32.const 1) (global.get $context_heap_offset)))
  )
  (func $get_next_context (param $offset i32) (result i32)
    (call $get_context (local.get $offset))
    (i32x4.extract_lane 2)
  )
  (func $get_context_start (param $offset i32) (result i32)
    (call $get_context (local.get $offset))
    (i32x4.extract_lane 3)
  )
  (func $get_context (param $offset i32) (result v128)
    (v128.load (i32.mul (local.get $offset) (i32.const 128)))
  )
  (func $get_context_val_i32 (param $offset i32) (result i32)
    (call $get_context (local.get $offset))
    (i32x4.extract_lane 0)
  )
  (func $get_context_val_i64 (param $offset i32) (result i64)
    (call $get_context (local.get $offset))
    (i64x2.extract_lane 0)
  )
  (func $get_context_val_f32 (param $offset i32) (result f32)
    (call $get_context (local.get $offset))
    (f32x4.extract_lane 0)
  )
  (func $get_context_val_f64 (param $offset i32) (result f64)
    (call $get_context (local.get $offset))
    (f64x2.extract_lane 0)
  )
  (func $alloc_context_var_i32 (param $value i32) (param $base i32) (result i32)
    (call $cal_heap_border)
    (call $create_context (i64.extend_i32_s (local.get $value)) (call $get_context_start (local.get $base)))
    (v128.store)
    (i32.mul (local.get $base) (i32.const 128))
    (i32x4.replace_lane 2 (call $get_context (local.get $base)) (global.get $context_heap_offset))
    (v128.store)
    (global.get $context_heap_offset)
    (global.set $context_heap_offset (i32.add (i32.const 1) (global.get $context_heap_offset)))
  )
  (func $read_i32_from_context (param $index i32) (param $context i32) (result i32)
    (local $currentContext v128)
    (local.set $currentContext (call $get_context (call $get_context_start (local.get $context))))

    (block
      (loop
        (br_if 0 (i32.eq (local.get $index) (i32.const 1)))
        (local.set $currentContext (call $get_context (i32x4.extract_lane 2 (local.get $currentContext))))
        (local.set $index (i32.sub (local.get $index) (i32.const 1)))
      )
    )

    (i32x4.extract_lane 0 (local.get $currentContext))
  )
)

;; 100 10 , 100 - 10 들어간 순서대로 (위에서부터)